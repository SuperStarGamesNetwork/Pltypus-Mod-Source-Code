package cloudioa.mymod.platipusmod.common;

import cpw.mods.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.*;
import net.minecraftforge.event.entity.living.LivingEvent.LivingUpdateEvent;
import net.minecraftforge.event.entity.player.ArrowLooseEvent;
import net.minecraftforge.event.entity.player.ArrowNockEvent;
import net.minecraftforge.event.terraingen.DecorateBiomeEvent.Decorate.EventType;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.*;
import net.minecraft.world.World;


public class EventHandeler {

}
@EventHandeler
public void load(FMLInitializationEvent event)
{
MinecraftForge.EVENT_BUS.register(new EventHandeler());
}
//In your TutEventHandler class - the name of the method doesn't matter
//Only the Event type parameter is what's important (see below for explanations of some types)
@ForgeSubscribe
public void onLivingUpdateEvent(LivingUpdateEvent event)
{
//This event has an Entity variable, access it like this:
event.entity;

//do something to player every update tick:
if (event.entity instanceof EntityPlayer)
{
EntityPlayer player = (EntityPlayer) event.entity;
ItemStack heldItem = player.getHeldItem();
if (heldItem != null && heldItem.itemID == Item.arrow.itemID) {
player.capabilities.allowFlying = true;
}
else {
player.capabilities.allowFlying = player.capabilities.isCreativeMode ? true : false;
}
/** ArrowNockEvent should be placed in 'onItemRightClick' */
@Override
public ItemStack onItemRightClick(ItemStack itemstack, World world, EntityPlayer player)
{
// Create the event and post it
ArrowNockEvent event = new ArrowNockEvent(player, itemstack);
MinecraftForge.EVENT_BUS.post(event);

if (event.isCanceled())
{
// you could do other stuff here as well
return event.result;
}

player.setItemInUse(itemstack, this.getMaxItemUseDuration(itemstack));
}
return itemstack;
}

/** ArrowLooseEvent should be placed in 'onPlayerStoppedUsing' */
public void onPlayerStoppedUsing(ItemStack itemstack, World world, EntityPlayer player, int par4)
{
// Ticks in use is max duration minus par4, which is equal to max duration - 1 for every tick in use
int ticksInUse = this.getMaxItemUseDuration(itemstack) - par4;

ArrowLooseEvent event = new ArrowLooseEvent(player, itemstack, ticksInUse);
MinecraftForge.EVENT_BUS.post(event);

if (event.isCanceled()) { return; }

// ticksInUse might be modified by the Event in your EventHandler, so reassign it here:
ticksInUse = event.charge;

// Do whatever else you want with the itemstack like fire an arrow or cast a spell
}
@ForgeSubscribe
public void methodName(EventType event)
{
// do whatever you want here
}
}
